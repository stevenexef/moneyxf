{"version":3,"sources":["components/LoginForm.tsx","components/RegisterForm.tsx","components/Sidebar.tsx","components/Dashboard.tsx","components/Budget.tsx","components/Transactions.tsx","App.tsx","index.tsx"],"names":["LoginForm","_ref","setIsAuth","navigate","useNavigate","formData","setFormData","useState","email","password","error","setError","handleChange","e","name","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","src","alt","onSubmit","async","preventDefault","dummyUser","localStorage","clear","setItem","JSON","stringify","avatar","err","console","htmlFor","type","id","onChange","placeholder","required","Link","to","RegisterForm","confirmPassword","log","Sidebar","activeTab","isOpen","setIsOpen","handleSignOut","window","location","href","concat","process","toggleMenu","_Fragment","onClick","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Dashboard","percentage","monthlySpending","Date","toLocaleDateString","weekday","year","month","day","toLocaleString","style","currency","width","toFixed","amount","total","color","map","category","backgroundColor","icon","title","date","transaction","index","toLowerCase","Budget","max","Transactions","App","isLoading","setIsLoading","isAuth","useEffect","checkAuth","token","getItem","user","Router","basename","Routes","Route","path","element","Navigate","replace","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7cf610.chunk.js","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginFormData } from '../types/auth.types';\n\ninterface LoginFormProps {\n  setIsAuth: (auth: boolean) => void;\n}\n\nconst LoginForm: React.FC<LoginFormProps> = ({ setIsAuth }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<LoginFormData>({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const dummyUser = {\n        email: 'demo@example.com',\n        password: 'demo123',\n      };\n\n      if (formData.email === dummyUser.email && formData.password === dummyUser.password) {\n        localStorage.clear();\n        localStorage.setItem('token', 'mock-token');\n        localStorage.setItem(\n          'user',\n          JSON.stringify({\n            name: 'John Doe',\n            email: dummyUser.email,\n            avatar: 'JD',\n          })\n        );\n\n        setIsAuth(true);\n        navigate('/dashboard');\n      } else {\n        setError('Invalid email or password. Try demo@example.com / demo123');\n      }\n    } catch (err) {\n      setError('Failed to login. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-content\">\n        <div className=\"login-left\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n          <div className=\"login-text\">\n            <h1>Welcome back</h1>\n            <p>Track your spending, set budgets, and achieve your financial goals.</p>\n          </div>\n        </div>\n        <div className=\"login-right\">\n          <div className=\"auth-form\">\n            <h2>Sign in to your account</h2>\n            {error && <div className=\"error\">{error}</div>}\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder=\"Enter your password\"\n                  required\n                />\n              </div>\n              <button type=\"submit\">Sign in</button>\n            </form>\n            <div className=\"auth-form-footer\">\n              Don't have an account? <Link to=\"/register\">Sign up</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { RegisterFormData } from '../types/auth.types';\n\nconst RegisterForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<RegisterFormData>({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      // Here you would typically make an API call to your backend\n      console.log('Registration attempt with:', formData);\n      // If successful, redirect to login\n      navigate('/login');\n    } catch (err) {\n      setError('Failed to register. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"register-page\">\n      <div className=\"register-header\">\n        <Link to=\"/\" className=\"logo\">\n          <img\n            src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n            alt=\"Logo\"\n          />\n          <span className=\"logo-text\">MoneyXF</span>\n        </Link>\n      </div>\n      <div className=\"auth-form\">\n        <h2>Create Account</h2>\n        {error && <div className=\"error\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Full name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Enter your full name\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email address</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Create a password\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              placeholder=\"Confirm your password\"\n              required\n            />\n          </div>\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        <div className=\"auth-form-footer\">\n          Already have an account? <Link to=\"/login\">Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\ninterface SidebarProps {\n  activeTab: 'overview' | 'transactions' | 'budget';\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ activeTab }) => {\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleSignOut = () => {\n    localStorage.clear();\n    // Force a page reload to clear all states\n    window.location.href = process.env.PUBLIC_URL ? `${process.env.PUBLIC_URL}/login` : '/login';\n  };\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <div className=\"mobile-header\">\n        <button className=\"hamburger\" onClick={toggleMenu}>\n          <span className=\"hamburger-line\"></span>\n          <span className=\"hamburger-line\"></span>\n          <span className=\"hamburger-line\"></span>\n        </button>\n        <div className=\"logo\">\n          <img\n            src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n            alt=\"Logo\"\n          />\n          <span className=\"logo-text\">MoneyXF</span>\n        </div>\n      </div>\n\n      <div className={`mobile-overlay ${isOpen ? 'open' : ''}`} onClick={toggleMenu}></div>\n\n      <aside className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n        </div>\n        <nav className=\"sidebar-nav\">\n          <Link to=\"/dashboard\" className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n              />\n            </svg>\n            Overview\n          </Link>\n          <Link\n            to=\"/transactions\"\n            className={`nav-item ${activeTab === 'transactions' ? 'active' : ''}`}\n          >\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n            Transactions\n          </Link>\n          <Link to=\"/budget\" className={`nav-item ${activeTab === 'budget' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n              />\n            </svg>\n            Budget\n          </Link>\n        </nav>\n        <div className=\"sidebar-footer\">\n          <button className=\"logout-button\" onClick={handleSignOut}>\n            <span>Sign Out</span>\n          </button>\n        </div>\n      </aside>\n\n      <nav className={`mobile-nav ${isOpen ? 'open' : ''}`}>\n        <div className=\"sidebar-header\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n        </div>\n        <div className=\"sidebar-nav\">\n          <Link to=\"/dashboard\" className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n              />\n            </svg>\n            Overview\n          </Link>\n          <Link\n            to=\"/transactions\"\n            className={`nav-item ${activeTab === 'transactions' ? 'active' : ''}`}\n          >\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n            Transactions\n          </Link>\n          <Link to=\"/budget\" className={`nav-item ${activeTab === 'budget' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n              />\n            </svg>\n            Budget\n          </Link>\n        </div>\n        <div className=\"sidebar-footer\">\n          <button className=\"logout-button\" onClick={handleSignOut}>\n            <span>Sign Out</span>\n          </button>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\n\nconst Dashboard: React.FC = () => {\n  // Calculate monthly spending percentage\n  const monthlySpending = 1950;\n  const monthlyBudget = 3000;\n  const percentage = (monthlySpending / monthlyBudget) * 100;\n\n  return (\n    <div className=\"dashboard\">\n      <Sidebar activeTab=\"overview\" />\n      <main className=\"main-content\">\n        <div className=\"welcome-container\">\n          <div className=\"welcome-content\">\n            <div className=\"welcome-text\">\n              <h1>Welcome back, John</h1>\n              <p>Here's what's happening with your finances today</p>\n            </div>\n            <div className=\"date-display\">\n              <span className=\"current-date\">\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metrics-row\">\n          <div className=\"metric-card highlight\">\n            <div className=\"metric-icon\">💰</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Total Balance</span>\n              <span className=\"metric-value\">$5,240.00</span>\n              <span className=\"metric-trend positive\">+12.5% vs last month</span>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">📊</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Monthly Spending</span>\n              <span className=\"metric-value\">\n                {monthlySpending.toLocaleString('en-US', {\n                  style: 'currency',\n                  currency: 'USD',\n                })}\n              </span>\n              <div className=\"metric-progress\">\n                <div className=\"progress-bar\">\n                  <div\n                    className={`progress ${\n                      percentage > 60 ? 'danger' : percentage > 30 ? 'warning' : ''\n                    }`}\n                    style={{ width: `${percentage}%` }}\n                  >\n                    <div className=\"progress-glow\"></div>\n                  </div>\n                </div>\n                <span\n                  className={`progress-label ${\n                    percentage > 60 ? 'danger' : percentage > 30 ? 'warning' : 'success'\n                  }`}\n                >\n                  {percentage.toFixed(0)}% of{' '}\n                  {monthlyBudget.toLocaleString('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                  })}{' '}\n                  budget\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">🎯</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Savings Goal</span>\n              <span className=\"metric-value\">$12,580</span>\n              <span className=\"metric-subtitle\">of $15,000 target</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"quick-actions\">\n          <button className=\"action-button\">\n            <span className=\"action-icon\">➕</span>\n            <span>Add</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">📊</span>\n            <span>Budget</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">🎯</span>\n            <span>Goals</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">📈</span>\n            <span>Reports</span>\n          </button>\n        </div>\n\n        <div className=\"dashboard-content\">\n          <div className=\"activity-card\">\n            <div className=\"card-header\">\n              <h2>Spending by Category</h2>\n              <select className=\"time-range\">\n                <option>This Month</option>\n                <option>Last Month</option>\n                <option>Last 3 Months</option>\n              </select>\n            </div>\n            <div className=\"category-list\">\n              <div className=\"spending-summary\">\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Total Spent</span>\n                  <span className=\"summary-value\">$2,650.00</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Budget Left</span>\n                  <span className=\"summary-value positive\">$350.00</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Daily Average</span>\n                  <span className=\"summary-value\">$88.33</span>\n                </div>\n              </div>\n              {[\n                { name: 'Housing', amount: 1400, total: 1500, color: '#4f46e5' },\n                { name: 'Food', amount: 850, total: 1000, color: '#06b6d4' },\n                { name: 'Transportation', amount: 400, total: 500, color: '#8b5cf6' },\n              ].map((category) => (\n                <div key={category.name} className=\"category-item\">\n                  <div className=\"category-info\">\n                    <span className=\"category-name\">{category.name}</span>\n                    <span className=\"category-amount\">\n                      ${category.amount.toLocaleString()}\n                      <span className=\"category-total\">/${category.total.toLocaleString()}</span>\n                    </span>\n                  </div>\n                  <div className=\"category-bar\">\n                    <div\n                      className=\"category-progress\"\n                      style={{\n                        width: `${(category.amount / category.total) * 100}%`,\n                        backgroundColor: category.color,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"transactions-card\">\n            <div className=\"card-header\">\n              <h2>Recent Transactions</h2>\n              <select className=\"time-range\">\n                <option>Today</option>\n                <option>Yesterday</option>\n                <option>Last 7 Days</option>\n              </select>\n            </div>\n            <ul className=\"transaction-list\">\n              {[\n                {\n                  icon: '🛒',\n                  title: 'Grocery Store',\n                  date: 'Today, 2:30 PM',\n                  amount: -85.5,\n                  category: 'Shopping',\n                },\n                {\n                  icon: '💰',\n                  title: 'Salary Deposit',\n                  date: 'Mar 1, 2024',\n                  amount: 2500.0,\n                  category: 'Income',\n                },\n                {\n                  icon: '🏠',\n                  title: 'Rent Payment',\n                  date: 'Mar 1, 2024',\n                  amount: -1200.0,\n                  category: 'Housing',\n                },\n              ].map((transaction, index) => (\n                <li key={index}>\n                  <div className=\"transaction-info\">\n                    <span className={`transaction-icon ${transaction.category.toLowerCase()}`}>\n                      {transaction.icon}\n                    </span>\n                    <div className=\"transaction-details\">\n                      <p className=\"transaction-title\">{transaction.title}</p>\n                      <div className=\"transaction-meta\">\n                        <span className=\"transaction-date\">{transaction.date}</span>\n                        <span className=\"transaction-category\">{transaction.category}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <span className={`amount ${transaction.amount > 0 ? 'positive' : 'negative'}`}>\n                    {transaction.amount > 0 ? '+' : ''}\n                    {transaction.amount.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD',\n                    })}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport Sidebar from './Sidebar';\n\nconst Budget: React.FC = () => {\n  return (\n    <div className=\"dashboard\">\n      <Sidebar activeTab=\"budget\" />\n      <main className=\"main-content\">\n        <div className=\"welcome-container\">\n          <div className=\"welcome-content\">\n            <div className=\"welcome-text\">\n              <h1>Budget Planning</h1>\n              <p>•</p>\n              <p>Manage your monthly budgets and spending limits</p>\n            </div>\n            <div className=\"date-display\">\n              <span className=\"current-date\">\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metrics-row\">\n          <div className=\"metric-card highlight\">\n            <div className=\"metric-icon\">💰</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Monthly Budget</span>\n              <span className=\"metric-value\">$3,000.00</span>\n              <div className=\"metric-progress\">\n                <div className=\"progress-bar\">\n                  <div className=\"progress\" style={{ width: '65%' }}>\n                    <div className=\"progress-glow\"></div>\n                  </div>\n                </div>\n                <span className=\"progress-label\">$1,050.00 remaining • 12 days left</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">📊</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Total Spent</span>\n              <span className=\"metric-value\">$1,950.00</span>\n              <span className=\"metric-trend negative\">+12.5% vs last month</span>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">🎯</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Budget Health</span>\n              <span className=\"metric-value\">Good</span>\n              <span className=\"metric-subtitle\">On track with 5 categories</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"budget-overview\">\n          <div className=\"dashboard-card\">\n            <div className=\"card-header\">\n              <div className=\"header-left\">\n                <h2>Budget Categories</h2>\n                <span className=\"transaction-count\">(5 Active)</span>\n              </div>\n              <button className=\"action-button\">\n                <span className=\"action-icon\">➕</span>\n                <span>Add Category</span>\n              </button>\n            </div>\n            <div className=\"budget-categories\">\n              {[\n                { name: 'Housing', amount: 1400, max: 1500, color: '#4f46e5' },\n                { name: 'Food', amount: 850, max: 1000, color: '#06b6d4' },\n                { name: 'Transportation', amount: 400, max: 500, color: '#8b5cf6' },\n                { name: 'Entertainment', amount: 300, max: 400, color: '#ec4899' },\n                { name: 'Utilities', amount: 200, max: 250, color: '#f59e0b' },\n              ].map((category) => (\n                <div key={category.name} className=\"budget-category\">\n                  <div className=\"category-header\">\n                    <div className=\"category-info\">\n                      <h3>{category.name}</h3>\n                      <p className=\"category-budget\">\n                        <span className=\"amount-spent\">${category.amount.toLocaleString()}</span>\n                        <span className=\"amount-total\">of ${category.max.toLocaleString()}</span>\n                      </p>\n                    </div>\n                    <button className=\"edit-budget\">Edit</button>\n                  </div>\n                  <div className=\"category-bar\">\n                    <div\n                      className=\"category-progress\"\n                      style={{\n                        width: `${(category.amount / category.max) * 100}%`,\n                        backgroundColor: category.color,\n                      }}\n                    ></div>\n                  </div>\n                  <span className=\"remaining-budget\">\n                    ${(category.max - category.amount).toLocaleString()} remaining\n                  </span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Budget;\n","import React from 'react';\nimport Sidebar from './Sidebar';\n\nconst Transactions: React.FC = () => {\n  return (\n    <div className=\"dashboard\">\n      <Sidebar activeTab=\"transactions\" />\n      <main className=\"main-content\">\n        <div className=\"welcome-container\">\n          <div className=\"welcome-content\">\n            <div className=\"welcome-text\">\n              <h1>Transactions</h1>\n              <p>•</p>\n              <p>Track your income and expenses</p>\n            </div>\n            <div className=\"date-display\">\n              <span className=\"current-date\">\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metrics-row\">\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">💸</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Total Expenses</span>\n              <span className=\"metric-value\">$2,850.00</span>\n              <span className=\"metric-trend negative\">+15.3% vs last month</span>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">💰</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Total Income</span>\n              <span className=\"metric-value\">$4,500.00</span>\n              <span className=\"metric-trend positive\">+8.2% vs last month</span>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">💵</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Net Flow</span>\n              <span className=\"metric-value\">+$1,650.00</span>\n              <span className=\"metric-subtitle\">This month</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"dashboard-card transactions-list\">\n          <div className=\"card-header\">\n            <div className=\"header-left\">\n              <h2>All Transactions</h2>\n              <span className=\"transaction-count\">(245)</span>\n            </div>\n            <div className=\"transaction-filters\">\n              <select className=\"time-range\">\n                <option>All Time</option>\n                <option>This Month</option>\n                <option>Last Month</option>\n                <option>Last 3 Months</option>\n              </select>\n              <select className=\"time-range\">\n                <option>All Categories</option>\n                <option>Housing</option>\n                <option>Food</option>\n                <option>Transportation</option>\n                <option>Entertainment</option>\n                <option>Utilities</option>\n              </select>\n            </div>\n          </div>\n          <ul className=\"transaction-list detailed\">\n            {[\n              {\n                icon: '🛒',\n                title: 'Grocery Store',\n                date: 'Today, 2:30 PM',\n                amount: -85.5,\n                category: 'Food',\n              },\n              {\n                icon: '💰',\n                title: 'Salary Deposit',\n                date: 'Mar 1, 2024',\n                amount: 4500.0,\n                category: 'Income',\n              },\n              {\n                icon: '🏠',\n                title: 'Rent Payment',\n                date: 'Mar 1, 2024',\n                amount: -1400.0,\n                category: 'Housing',\n              },\n              {\n                icon: '🚗',\n                title: 'Gas Station',\n                date: 'Feb 29, 2024',\n                amount: -45.0,\n                category: 'Transportation',\n              },\n              {\n                icon: '🎬',\n                title: 'Movie Tickets',\n                date: 'Feb 28, 2024',\n                amount: -32.0,\n                category: 'Entertainment',\n              },\n              {\n                icon: '💡',\n                title: 'Electric Bill',\n                date: 'Feb 28, 2024',\n                amount: -95.0,\n                category: 'Utilities',\n              },\n            ].map((transaction, index) => (\n              <li key={index}>\n                <div className=\"transaction-info\">\n                  <span className={`transaction-icon ${transaction.category.toLowerCase()}`}>\n                    {transaction.icon}\n                  </span>\n                  <div className=\"transaction-details\">\n                    <p className=\"transaction-title\">{transaction.title}</p>\n                    <div className=\"transaction-meta\">\n                      <span className=\"transaction-date\">{transaction.date}</span>\n                      <span className=\"transaction-category\">{transaction.category}</span>\n                    </div>\n                  </div>\n                </div>\n                <span className={`amount ${transaction.amount > 0 ? 'positive' : ''}`}>\n                  {transaction.amount > 0 ? '+' : ''}\n                  {transaction.amount.toLocaleString('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                  })}\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Transactions;\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport Dashboard from './components/Dashboard';\nimport Budget from './components/Budget';\nimport Transactions from './components/Transactions';\nimport './styles/variables.css';\nimport './styles/base.css';\nimport './styles/auth.css';\nimport './styles/sidebar.css';\nimport './styles/dashboard.css';\nimport './styles/budget.css';\nimport './styles/transactions.css';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuth, setIsAuth] = useState(false);\n\n  useEffect(() => {\n    const checkAuth = () => {\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      setIsAuth(!!(token && user));\n      setIsLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>; // Or your loading component\n  }\n\n  const baseUrl = process.env.PUBLIC_URL || '/moneyxf';\n\n  return (\n    <Router basename={baseUrl}>\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={isAuth ? <Navigate to=\"/dashboard\" /> : <Navigate to=\"/login\" />}\n          />\n          <Route\n            path=\"/login\"\n            element={isAuth ? <Navigate to=\"/dashboard\" /> : <LoginForm setIsAuth={setIsAuth} />}\n          />\n          <Route\n            path=\"/register\"\n            element={isAuth ? <Navigate to=\"/dashboard\" /> : <RegisterForm />}\n          />\n          <Route path=\"/dashboard\" element={isAuth ? <Dashboard /> : <Navigate to=\"/login\" />} />\n          <Route path=\"/budget\" element={isAuth ? <Budget /> : <Navigate to=\"/login\" />} />\n          <Route\n            path=\"/transactions\"\n            element={isAuth ? <Transactions /> : <Navigate to=\"/login\" />}\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}