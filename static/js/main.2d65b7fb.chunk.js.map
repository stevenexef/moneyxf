{"version":3,"sources":["components/LoginForm.tsx","components/RegisterForm.tsx","components/Sidebar.tsx","components/Dashboard.tsx","App.tsx","index.tsx"],"names":["LoginForm","navigate","useNavigate","formData","setFormData","useState","email","password","error","setError","handleChange","e","name","value","target","prev","_objectSpread","_jsx","className","children","_jsxs","src","alt","onSubmit","async","preventDefault","dummyUser","localStorage","clear","setItem","JSON","stringify","avatar","setTimeout","err","console","htmlFor","type","id","onChange","placeholder","required","Link","to","RegisterForm","confirmPassword","log","Sidebar","_ref","activeTab","isOpen","setIsOpen","handleSignOut","toggleMenu","_Fragment","onClick","concat","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Dashboard","percentage","monthlySpending","Date","toLocaleDateString","weekday","year","month","day","toLocaleString","style","currency","width","toFixed","amount","total","color","map","category","backgroundColor","icon","title","date","transaction","index","toLowerCase","App","isAuthenticated","token","getItem","user","Router","basename","Routes","Route","path","element","Navigate","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d65b7fb.chunk.js","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginFormData } from '../types/auth.types';\n\nconst LoginForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<LoginFormData>({\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      // Dummy credentials\n      const dummyUser = {\n        email: 'demo@example.com',\n        password: 'demo123',\n      };\n\n      if (formData.email === dummyUser.email && formData.password === dummyUser.password) {\n        // Clear any existing data\n        localStorage.clear();\n\n        // Set new auth data\n        localStorage.setItem('token', 'mock-token');\n        localStorage.setItem(\n          'user',\n          JSON.stringify({\n            name: 'John Doe',\n            email: dummyUser.email,\n            avatar: 'JD',\n          })\n        );\n\n        // Small delay to ensure localStorage is updated\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 100);\n      } else {\n        setError('Invalid email or password. Try demo@example.com / demo123');\n      }\n    } catch (err) {\n      setError('Failed to login. Please try again.');\n      console.error('Login error:', err);\n    }\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"login-content\">\n        <div className=\"login-left\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n          <div className=\"login-text\">\n            <h1>Welcome back</h1>\n            <p>Track your spending, set budgets, and achieve your financial goals.</p>\n          </div>\n        </div>\n        <div className=\"login-right\">\n          <div className=\"auth-form\">\n            <h2>Sign in to your account</h2>\n            {error && <div className=\"error\">{error}</div>}\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email address</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  placeholder=\"Enter your password\"\n                  required\n                />\n              </div>\n              <button type=\"submit\">Sign in</button>\n            </form>\n            <div className=\"auth-form-footer\">\n              Don't have an account? <Link to=\"/register\">Sign up</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { RegisterFormData } from '../types/auth.types';\n\nconst RegisterForm: React.FC = () => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState<RegisterFormData>({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [error, setError] = useState<string>('');\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      // Here you would typically make an API call to your backend\n      console.log('Registration attempt with:', formData);\n      // If successful, redirect to login\n      navigate('/login');\n    } catch (err) {\n      setError('Failed to register. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"register-page\">\n      <div className=\"register-header\">\n        <Link to=\"/\" className=\"logo\">\n          <img\n            src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n            alt=\"Logo\"\n          />\n          <span className=\"logo-text\">MoneyXF</span>\n        </Link>\n      </div>\n      <div className=\"auth-form\">\n        <h2>Create Account</h2>\n        {error && <div className=\"error\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Full name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Enter your full name\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email address</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"Enter your email\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Create a password\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              placeholder=\"Confirm your password\"\n              required\n            />\n          </div>\n          <button type=\"submit\">Sign Up</button>\n        </form>\n        <div className=\"auth-form-footer\">\n          Already have an account? <Link to=\"/login\">Sign in</Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\ninterface SidebarProps {\n  activeTab: 'overview' | 'transactions' | 'budget';\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({ activeTab }) => {\n  const navigate = useNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleSignOut = () => {\n    // Clear all auth data\n    localStorage.clear();\n    navigate('/login');\n  };\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <>\n      <div className=\"mobile-header\">\n        <button className=\"hamburger\" onClick={toggleMenu}>\n          <span className=\"hamburger-line\"></span>\n          <span className=\"hamburger-line\"></span>\n          <span className=\"hamburger-line\"></span>\n        </button>\n        <div className=\"logo\">\n          <img\n            src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n            alt=\"Logo\"\n          />\n          <span className=\"logo-text\">MoneyXF</span>\n        </div>\n      </div>\n\n      <div className={`mobile-overlay ${isOpen ? 'open' : ''}`} onClick={toggleMenu}></div>\n\n      <aside className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n        </div>\n        <nav className=\"sidebar-nav\">\n          <Link to=\"/dashboard\" className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n              />\n            </svg>\n            Overview\n          </Link>\n          <Link\n            to=\"/transactions\"\n            className={`nav-item ${activeTab === 'transactions' ? 'active' : ''}`}\n          >\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n            Transactions\n          </Link>\n          <Link to=\"/budget\" className={`nav-item ${activeTab === 'budget' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n              />\n            </svg>\n            Budget\n          </Link>\n        </nav>\n        <div className=\"sidebar-footer\">\n          <button className=\"logout-button\" onClick={handleSignOut}>\n            <span>Sign Out</span>\n          </button>\n        </div>\n      </aside>\n\n      <nav className={`mobile-nav ${isOpen ? 'open' : ''}`}>\n        <div className=\"sidebar-header\">\n          <div className=\"logo\">\n            <img\n              src=\"https://assets.codepen.io/7773162/internal/avatars/users/default.png\"\n              alt=\"Logo\"\n            />\n            <span className=\"logo-text\">MoneyXF</span>\n          </div>\n        </div>\n        <div className=\"sidebar-nav\">\n          <Link to=\"/dashboard\" className={`nav-item ${activeTab === 'overview' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n              />\n            </svg>\n            Overview\n          </Link>\n          <Link\n            to=\"/transactions\"\n            className={`nav-item ${activeTab === 'transactions' ? 'active' : ''}`}\n          >\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n            Transactions\n          </Link>\n          <Link to=\"/budget\" className={`nav-item ${activeTab === 'budget' ? 'active' : ''}`}>\n            <svg className=\"nav-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\"\n              />\n            </svg>\n            Budget\n          </Link>\n        </div>\n        <div className=\"sidebar-footer\">\n          <button className=\"logout-button\" onClick={handleSignOut}>\n            <span>Sign Out</span>\n          </button>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from './Sidebar';\n\nconst Dashboard: React.FC = () => {\n  // Calculate monthly spending percentage\n  const monthlySpending = 1950;\n  const monthlyBudget = 3000;\n  const percentage = (monthlySpending / monthlyBudget) * 100;\n\n  return (\n    <div className=\"dashboard\">\n      <Sidebar activeTab=\"overview\" />\n      <main className=\"main-content\">\n        <div className=\"welcome-container\">\n          <div className=\"welcome-content\">\n            <div className=\"welcome-text\">\n              <h1>Welcome back, John</h1>\n              <p>•</p>\n              <p>Here's what's happening with your finances today</p>\n            </div>\n            <div className=\"date-display\">\n              <span className=\"current-date\">\n                {new Date().toLocaleDateString('en-US', {\n                  weekday: 'long',\n                  year: 'numeric',\n                  month: 'long',\n                  day: 'numeric',\n                })}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"metrics-row\">\n          <div className=\"metric-card highlight\">\n            <div className=\"metric-icon\">💰</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Total Balance</span>\n              <span className=\"metric-value\">$5,240.00</span>\n              <span className=\"metric-trend positive\">+12.5% vs last month</span>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">📊</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Monthly Spending</span>\n              <span className=\"metric-value\">\n                {monthlySpending.toLocaleString('en-US', {\n                  style: 'currency',\n                  currency: 'USD',\n                })}\n              </span>\n              <div className=\"metric-progress\">\n                <div className=\"progress-bar\">\n                  <div\n                    className={`progress ${\n                      percentage > 60 ? 'danger' : percentage > 30 ? 'warning' : ''\n                    }`}\n                    style={{ width: `${percentage}%` }}\n                  >\n                    <div className=\"progress-glow\"></div>\n                  </div>\n                </div>\n                <span\n                  className={`progress-label ${\n                    percentage > 60 ? 'danger' : percentage > 30 ? 'warning' : 'success'\n                  }`}\n                >\n                  {percentage.toFixed(0)}% of{' '}\n                  {monthlyBudget.toLocaleString('en-US', {\n                    style: 'currency',\n                    currency: 'USD',\n                  })}{' '}\n                  budget\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"metric-card\">\n            <div className=\"metric-icon\">🎯</div>\n            <div className=\"metric-data\">\n              <span className=\"metric-label\">Savings Goal</span>\n              <span className=\"metric-value\">$12,580</span>\n              <span className=\"metric-subtitle\">of $15,000 target</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"quick-actions\">\n          <button className=\"action-button\">\n            <span className=\"action-icon\">➕</span>\n            <span>Add</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">📊</span>\n            <span>Budget</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">🎯</span>\n            <span>Goals</span>\n          </button>\n          <button className=\"action-button\">\n            <span className=\"action-icon\">📈</span>\n            <span>Reports</span>\n          </button>\n        </div>\n\n        <div className=\"dashboard-content\">\n          <div className=\"activity-card\">\n            <div className=\"card-header\">\n              <h2>Spending by Category</h2>\n              <select className=\"time-range\">\n                <option>This Month</option>\n                <option>Last Month</option>\n                <option>Last 3 Months</option>\n              </select>\n            </div>\n            <div className=\"category-list\">\n              <div className=\"spending-summary\">\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Total Spent</span>\n                  <span className=\"summary-value\">$2,650.00</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Budget Left</span>\n                  <span className=\"summary-value positive\">$350.00</span>\n                </div>\n                <div className=\"summary-item\">\n                  <span className=\"summary-label\">Daily Average</span>\n                  <span className=\"summary-value\">$88.33</span>\n                </div>\n              </div>\n              {[\n                { name: 'Housing', amount: 1400, total: 1500, color: '#4f46e5' },\n                { name: 'Food', amount: 850, total: 1000, color: '#06b6d4' },\n                { name: 'Transportation', amount: 400, total: 500, color: '#8b5cf6' },\n              ].map((category) => (\n                <div key={category.name} className=\"category-item\">\n                  <div className=\"category-info\">\n                    <span className=\"category-name\">{category.name}</span>\n                    <span className=\"category-amount\">\n                      ${category.amount.toLocaleString()}\n                      <span className=\"category-total\">/${category.total.toLocaleString()}</span>\n                    </span>\n                  </div>\n                  <div className=\"category-bar\">\n                    <div\n                      className=\"category-progress\"\n                      style={{\n                        width: `${(category.amount / category.total) * 100}%`,\n                        backgroundColor: category.color,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"transactions-card\">\n            <div className=\"card-header\">\n              <h2>Recent Transactions</h2>\n              <select className=\"time-range\">\n                <option>Today</option>\n                <option>Yesterday</option>\n                <option>Last 7 Days</option>\n              </select>\n            </div>\n            <ul className=\"transaction-list\">\n              {[\n                {\n                  icon: '🛒',\n                  title: 'Grocery Store',\n                  date: 'Today, 2:30 PM',\n                  amount: -85.5,\n                  category: 'Shopping',\n                },\n                {\n                  icon: '💰',\n                  title: 'Salary Deposit',\n                  date: 'Mar 1, 2024',\n                  amount: 2500.0,\n                  category: 'Income',\n                },\n                {\n                  icon: '🏠',\n                  title: 'Rent Payment',\n                  date: 'Mar 1, 2024',\n                  amount: -1200.0,\n                  category: 'Housing',\n                },\n              ].map((transaction, index) => (\n                <li key={index}>\n                  <div className=\"transaction-info\">\n                    <span className={`transaction-icon ${transaction.category.toLowerCase()}`}>\n                      {transaction.icon}\n                    </span>\n                    <div className=\"transaction-details\">\n                      <p className=\"transaction-title\">{transaction.title}</p>\n                      <div className=\"transaction-meta\">\n                        <span className=\"transaction-date\">{transaction.date}</span>\n                        <span className=\"transaction-category\">{transaction.category}</span>\n                      </div>\n                    </div>\n                  </div>\n                  <span className={`amount ${transaction.amount > 0 ? 'positive' : 'negative'}`}>\n                    {transaction.amount > 0 ? '+' : ''}\n                    {transaction.amount.toLocaleString('en-US', {\n                      style: 'currency',\n                      currency: 'USD',\n                    })}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport RegisterForm from './components/RegisterForm';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nconst App: React.FC = () => {\n  // Check both token and user data\n  const isAuthenticated = () => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    return !!(token && user);\n  };\n\n  return (\n    <Router basename=\"/moneyxf\">\n      <div className=\"App\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={isAuthenticated() ? <Navigate to=\"/dashboard\" /> : <Navigate to=\"/login\" />}\n          />\n          <Route path=\"/login\" element={<LoginForm />} />\n          <Route path=\"/register\" element={<RegisterForm />} />\n          <Route\n            path=\"/dashboard\"\n            element={isAuthenticated() ? <Dashboard /> : <Navigate to=\"/login\" />}\n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}